# STEPS.TXT - Complete Windows Automation Setup Guide
# WiFi Data Collection ‚Üí Excel Generation ‚Üí VBS Upload ‚Üí PDF Export ‚Üí Email
# Date: July 4, 2025

## üéØ OVERVIEW
This guide will set up the WiFi automation system to:
- ‚úÖ Run automatically on every Windows startup
- ‚úÖ Work under locked Windows (Windows + L)
- ‚úÖ Download CSV files at scheduled times (9:30 AM, 1:00 PM, 3:30 PM)
- ‚úÖ Generate Excel files after all slots complete
- ‚úÖ Upload to VBS application automatically
- ‚úÖ Generate PDF reports
- ‚úÖ Email PDF reports next day
- ‚úÖ Restart PC automatically if issues occur
- ‚úÖ Work 365 days without manual intervention

---

## üîß PHASE 1: WINDOWS PERMISSIONS & STARTUP SETUP

### STEP 1: RUN AS ADMINISTRATOR (CRITICAL)
```
1. Right-click on PowerShell/Command Prompt
2. Select "Run as Administrator"
3. Navigate to: C:\Users\Lenovo\Videos\Automata
4. This is REQUIRED for all following steps
```

### STEP 2: DISABLE WINDOWS DEFENDER (TEMPORARY)
```
1. Open Windows Security (Windows + I ‚Üí Update & Security ‚Üí Windows Security)
2. Go to "Virus & threat protection"
3. Click "Manage settings" under "Virus & threat protection settings"
4. Turn OFF "Real-time protection" (temporarily)
5. Turn OFF "Cloud-delivered protection"
6. Turn OFF "Automatic sample submission"
Note: We'll re-enable after setup is complete
```

### STEP 3: WINDOWS USER ACCOUNT CONTROL (UAC) SETTINGS
```
1. Press Windows + R, type: msconfig
2. Click OK
3. Go to "Tools" tab
4. Find "Change UAC Settings" and click "Launch"
5. Move slider to "Never notify"
6. Click OK and restart when prompted
```

### STEP 4: WINDOWS AUTOMATIC LOGIN SETUP
```
1. Press Windows + R, type: netplwiz
2. Click OK
3. Uncheck "Users must enter a user name and password to use this computer"
4. Click OK
5. Enter password: 2211fasin
6. Confirm password: 2211fasin
7. Click OK
Note: This allows the app to work even when PC restarts
```

### STEP 5: POWER SETTINGS CONFIGURATION
```
1. Open Control Panel ‚Üí Hardware and Sound ‚Üí Power Options
2. Click "Change plan settings" for your current plan
3. Set "Turn off the display" to "Never"
4. Set "Put the computer to sleep" to "Never"
5. Click "Change advanced power settings"
6. Expand "Hard disk" ‚Üí "Turn off hard disk after" ‚Üí Set to "Never"
7. Expand "Sleep" ‚Üí "Allow hybrid sleep" ‚Üí Set to "Disabled"
8. Expand "USB settings" ‚Üí "USB selective suspend" ‚Üí Set to "Disabled"
9. Click OK and Apply
```

---

## üöÄ PHASE 2: APPLICATION INSTALLATION & SETUP

### STEP 6: INSTALL REQUIRED PYTHON LIBRARIES
```
Run these commands in Administrator PowerShell:

pip install --upgrade pip
pip install xlwt pandas python-dateutil pytz APScheduler pywin32 pystray Pillow selenium chromedriver-autoinstaller schedule watchdog

Note: If any installation fails, run each library individually
```

### STEP 7: CHROME CONFIGURATION FOR AUTOMATION
```
1. Open Chrome browser
2. Go to Settings (chrome://settings/)
3. Advanced ‚Üí Privacy and security ‚Üí Security
4. Set "Safe Browsing" to "No protection (not recommended)"
5. Go to Advanced ‚Üí Downloads
6. Set download location to: C:\Users\Lenovo\Downloads
7. Turn OFF "Ask where to save each file before downloading"
8. Go to Advanced ‚Üí Site Settings
9. Additional content settings ‚Üí Insecure content
10. Add site: https://51.38.163.73:8443 ‚Üí Allow
11. Go to Advanced ‚Üí System
12. Turn OFF "Continue running background apps when Google Chrome is closed"
```

### STEP 8: WINDOWS FIREWALL CONFIGURATION
```
1. Open Windows Defender Firewall (Control Panel ‚Üí System and Security)
2. Click "Allow an app or feature through Windows Defender Firewall"
3. Click "Change Settings" ‚Üí "Allow another app"
4. Browse and add: C:\Users\Lenovo\AppData\Local\Programs\Python\Python311\python.exe
5. Check both "Private" and "Public" networks
6. Click OK
7. Repeat for Chrome: C:\Program Files\Google\Chrome\Application\chrome.exe
```

---

## üìÖ PHASE 3: SCHEDULING & AUTOMATION SETUP

### STEP 9: WINDOWS TASK SCHEDULER SETUP
```
1. Press Windows + R, type: taskschd.msc
2. Click OK
3. In the right panel, click "Create Basic Task"
4. Name: "WiFi Automation Startup"
5. Description: "WiFi data collection and Excel generation"
6. Trigger: "When the computer starts"
7. Action: "Start a program"
8. Program: C:\Users\Lenovo\AppData\Local\Programs\Python\Python311\python.exe
9. Arguments: "C:\Users\Lenovo\Videos\Automata\wifi_automation_app.py --tray"
10. Start in: C:\Users\Lenovo\Videos\Automata
11. Check "Open Properties dialog" and click Finish

In Properties dialog:
- General tab: Check "Run with highest privileges"
- General tab: Check "Run whether user is logged on or not"
- Conditions tab: Uncheck "Start the task only if the computer is on AC power"
- Conditions tab: Check "Wake the computer to run this task"
- Settings tab: Check "Allow task to be run on demand"
- Settings tab: Check "If the running task does not end when requested, force it to stop"
- Settings tab: Set "If the task is already running" to "Do not start a new instance"
```

### STEP 10: REGISTRY STARTUP ENTRY
```
1. Press Windows + R, type: regedit
2. Navigate to: HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run
3. Right-click ‚Üí New ‚Üí String Value
4. Name: WiFiAutomation
5. Value: "C:\Users\Lenovo\AppData\Local\Programs\Python\Python311\python.exe" "C:\Users\Lenovo\Videos\Automata\wifi_automation_app.py" --tray
6. Click OK
```

### STEP 11: CREATE SCHEDULED RESTART SCRIPT
```
Create file: C:\Users\Lenovo\Videos\Automata\restart_if_needed.bat

Content:
@echo off
echo Checking WiFi Automation Status...
tasklist /FI "IMAGENAME eq python.exe" | find /I "python.exe" >nul
if %ERRORLEVEL% NEQ 0 (
    echo WiFi Automation not running. Restarting system...
    shutdown /r /t 30 /c "WiFi Automation restart - System will restart in 30 seconds"
) else (
    echo WiFi Automation is running normally.
)

Schedule this to run every 2 hours via Task Scheduler
```

---

## ‚è∞ PHASE 4: TIME SLOT CONFIGURATION

### STEP 12: CONFIGURE 3 DAILY TIME SLOTS
```
Edit the file: C:\Users\Lenovo\Videos\Automata\modules\advanced_scheduler.py

Find the time_slots configuration and update to:

self.time_slots = [
    {"name": "morning", "time": "09:30", "hour": 9, "minute": 30},
    {"name": "afternoon", "time": "13:00", "hour": 13, "minute": 0},
    {"name": "evening", "time": "15:30", "hour": 15, "minute": 30}
]

This sets up:
- Morning slot: 9:30 AM
- Afternoon slot: 1:00 PM  
- Evening slot: 3:30 PM (for today's test)
```

### STEP 13: TEST TODAY'S 3:30 PM SCHEDULE
```
Run this command to test the evening slot:

python wifi_automation_app.py --trigger-afternoon

This will simulate the 3:30 PM execution for testing
```

---

## üîí PHASE 5: LOCKED SCREEN COMPATIBILITY

### STEP 14: CONFIGURE WINDOWS TO ALLOW APPS UNDER LOCK
```
1. Press Windows + R, type: gpedit.msc
2. Navigate to: Computer Configuration ‚Üí Administrative Templates ‚Üí Windows Components ‚Üí App Privacy
3. Find "Let Windows apps run in the background" ‚Üí Set to "Enabled"
4. Navigate to: Computer Configuration ‚Üí Administrative Templates ‚Üí System ‚Üí Logon
5. Find "Run these programs at user logon" ‚Üí Set to "Enabled"
6. Add: C:\Users\Lenovo\Videos\Automata\wifi_automation_app.py --tray
```

### STEP 15: CONFIGURE CHROME FOR BACKGROUND OPERATION
```
1. Open Chrome
2. Go to chrome://flags/
3. Search for "background-mode"
4. Set "Enable background mode" to "Enabled"
5. Restart Chrome
6. Go to Settings ‚Üí Advanced ‚Üí System
7. Enable "Continue running background apps when Google Chrome is closed"
```

---

## üñ•Ô∏è PHASE 6: VBS APPLICATION INTEGRATION

### STEP 16: VBS APPLICATION PATH VERIFICATION
```
Verify these paths exist:
Primary: C:\Users\Lenovo\Music\moonflower\AbsonsItERP.exe - Shortcut.lnk
Fallback: \\192.168.10.16\e\ArabianLive\ArabianLive_MoonFlower\AbsonsItERP.exe

If primary path doesn't work, the app will automatically use the network path.
```

### STEP 17: NETWORK DRIVE MAPPING (if needed)
```
1. Open File Explorer
2. Click "This PC"
3. Click "Map network drive"
4. Drive letter: Z:
5. Folder: \\192.168.10.16\e
6. Check "Reconnect at sign-in"
7. Check "Connect using different credentials" (if needed)
8. Click Finish
```

---

## üìß PHASE 7: EMAIL CONFIGURATION

### STEP 18: EMAIL SETUP FOR PDF REPORTS
```
Create file: C:\Users\Lenovo\Videos\Automata\config\email_config.py

Content:
EMAIL_CONFIG = {
    "smtp_server": "smtp.gmail.com",  # Adjust for your email provider
    "smtp_port": 587,
    "email_address": "your-email@gmail.com",
    "email_password": "your-app-password",
    "recipient_email": "recipient@company.com",
    "subject_template": "WiFi Active Users Report - {date}",
    "body_template": "Please find attached the WiFi active users report for {date}."
}
```

---

## üîÑ PHASE 8: AUTOMATIC RESTART CONFIGURATION

### STEP 19: NIGHT RESTART SCHEDULE
```
Create Windows Task:
1. Open Task Scheduler
2. Create Basic Task
3. Name: "Nightly System Restart"
4. Trigger: Daily at 2:00 AM
5. Action: Start a program
6. Program: shutdown
7. Arguments: /r /t 60 /c "Nightly restart for WiFi automation maintenance"
8. Check "Run with highest privileges"
```

### STEP 20: ERROR RECOVERY RESTART
```
Create file: C:\Users\Lenovo\Videos\Automata\error_recovery.py

This script will:
- Monitor the WiFi automation process
- Restart the application if it crashes
- Restart the PC if critical errors occur
- Log all activities for debugging
```

---

## ‚úÖ PHASE 9: TESTING & VERIFICATION

### STEP 21: COMPLETE SYSTEM TEST
```
1. Run: python wifi_automation_app.py --status
2. Run: python wifi_automation_app.py --test-excel
3. Run: python wifi_automation_app.py --trigger-morning
4. Verify Excel file created in: EHC_Data_Merge\04july\
5. Test locked screen: Windows + L, wait 5 minutes, unlock and check logs
```

### STEP 22: STARTUP TEST
```
1. Restart your computer
2. Wait 2 minutes after login
3. Check system tray for WiFi Automation icon
4. Check Task Manager for python.exe process
5. Check logs in: C:\Users\Lenovo\Videos\Automata\logs\
```

### STEP 23: 3:30 PM TEST EXECUTION
```
At 3:30 PM today, the system should automatically:
1. Download 4 CSV files from WiFi networks
2. Wait 5 minutes after download completion
3. Generate Excel file: EHC_Upload_Mac_04072025.xls
4. Log all activities
5. Prepare for VBS upload

Monitor the logs during this time to ensure everything works correctly.
```

---

## üö® TROUBLESHOOTING STEPS

### IF APP DOESN'T START ON BOOT:
```
1. Check Task Scheduler - ensure task is enabled
2. Check Registry entry exists
3. Run as Administrator: python wifi_automation_app.py --add-startup
4. Verify Python path in startup commands
```

### IF DOWNLOADS FAIL:
```
1. Check Chrome is properly configured
2. Verify network connectivity to 51.38.163.73:8443
3. Check Windows Firewall settings
4. Verify SSL certificate acceptance in Chrome
```

### IF EXCEL GENERATION FAILS:
```
1. Verify xlwt library is installed: pip show xlwt
2. Check CSV files exist in EHC_Data folder
3. Verify write permissions to EHC_Data_Merge folder
4. Check logs for specific error messages
```

### IF VBS UPLOAD FAILS:
```
1. Verify VBS application paths
2. Check network connectivity to 192.168.10.16
3. Test manual VBS application launch
4. Verify login credentials (Username: Vj, Password: empty)
```

---

## üìã DAILY OPERATION CHECKLIST

### WHAT HAPPENS AUTOMATICALLY:
```
‚úÖ 9:30 AM  - Download CSV files from 4 WiFi networks
‚úÖ 1:00 PM  - Download CSV files from 4 WiFi networks  
‚úÖ 3:30 PM  - Download CSV files from 4 WiFi networks
‚úÖ 3:35 PM  - Generate Excel file (5 minutes after last slot)
‚úÖ 3:40 PM  - Upload Excel to VBS application
‚úÖ 3:45 PM  - Generate PDF report
‚úÖ Next Day - Email PDF report to designated person
‚úÖ 2:00 AM  - Nightly system restart for maintenance
```

### EXPECTED FILES DAILY:
```
üìÅ EHC_Data/04july/ - 12 CSV files (4 networks √ó 3 slots)
üìÑ EHC_Data_Merge/04july/EHC_Upload_Mac_04072025.xls - 1 Excel file
üìÑ PDF Reports/ - 1 PDF report
üìß Email sent with PDF attachment
```

---

## üîê SECURITY CONSIDERATIONS

### PASSWORDS & CREDENTIALS:
```
- Windows Login: 2211fasin
- VBS Application Username: Vj
- VBS Application Password: (empty)
- WiFi Interface: admin/AdminFlower@123
```

### NETWORK ACCESS:
```
- WiFi Interface: https://51.38.163.73:8443/wsg/
- VBS Application: \\192.168.10.16\e\ArabianLive\ArabianLive_MoonFlower\
```

---

## üéØ SUCCESS CRITERIA

### DAILY OPERATION REQUIREMENTS:
```
‚úÖ System starts automatically on boot
‚úÖ Works under locked Windows (Windows + L)
‚úÖ Downloads 12 CSV files daily (4 networks √ó 3 slots)
‚úÖ Generates 1 Excel file daily
‚úÖ Uploads to VBS application automatically
‚úÖ Generates PDF report
‚úÖ Emails PDF next day
‚úÖ Restarts automatically if issues occur
‚úÖ Operates 365 days without manual intervention
```

### PERFORMANCE METRICS:
```
‚úÖ 99%+ uptime
‚úÖ <5 minutes execution time per slot
‚úÖ 100% data integrity
‚úÖ Automatic error recovery
‚úÖ Complete audit trail
```

---

## üöÄ FINAL EXECUTION COMMANDS

### TO START THE SYSTEM:
```
# Start in system tray mode (recommended)
python wifi_automation_app.py --tray

# Start in console mode (for testing)
python wifi_automation_app.py --console

# Manual triggers for testing
python wifi_automation_app.py --trigger-morning
python wifi_automation_app.py --trigger-afternoon
python wifi_automation_app.py --trigger-merge
```

### TO CHECK STATUS:
```
python wifi_automation_app.py --status
```

### TO ADD TO WINDOWS STARTUP:
```
python wifi_automation_app.py --add-startup
```

---

## üìû SUPPORT & MAINTENANCE

### LOG FILES LOCATION:
```
C:\Users\Lenovo\Videos\Automata\logs\
- wifi_automation.log - Main application log
- excel_generator.log - Excel generation log
- scheduler.log - Scheduling system log
- error_recovery.log - Error handling log
```

### GITHUB REPOSITORY:
```
https://github.com/fasinabsons/Automata.git
All code is version controlled and backed up
```

---

**STATUS**: Ready for Production Deployment
**NEXT ACTION**: Execute steps 1-23 in sequence
**CRITICAL**: Run as Administrator for all setup steps
**TEST DATE**: Today at 3:30 PM for evening slot verification

## üéâ COMPLETION CHECKLIST

After completing all steps, verify:
- [ ] System starts on boot
- [ ] Works under locked screen
- [ ] 3:30 PM test execution successful
- [ ] Excel file generated correctly
- [ ] All logs show successful operation
- [ ] System tray icon visible and functional

**The system is now ready for 365-day automated operation!** 